{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_URL","process","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","QuoteItem","props","item","text","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","children","QuoteDetail","React","lazy","NewQuote","NotFound","App","fallback","path","exact","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.969245d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__UnZg6\",\"logo\":\"MainNavigation_logo__Vs9Lf\",\"nav\":\"MainNavigation_nav__1agnD\",\"active\":\"MainNavigation_active__UmnjS\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__88I5t\",\"sorting\":\"QuoteList_sorting__20ajo\"};","import { useReducer, useCallback } from 'react';\n\nconst httpReducer = (state, action) => {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  };\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  };\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  };\n\n  return state;\n}\n\nconst useHttp = (requestFunction, startWithPending = false) => {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async (requestData) => {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n};\n\nexport default useHttp;\n","const FIREBASE_URL = process.env.REACT_APP_NONSECRET_URL;\r\n// const FIREBASE_API = 'https://react-http001-default-rtdb.firebaseio.com';\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_URL}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quotes.');\r\n  };\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  };\r\n\r\n  return transformedQuotes;\r\n};\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_URL}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quote.');\r\n  };\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n};\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_URL}/quotes.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not create quote.');\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(`${FIREBASE_URL}/comments/${requestData.quoteId}.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(requestData.commentData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not add comment.');\r\n  };\r\n\r\n  return { commentId: data.name };\r\n};\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_URL}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not get comments.');\r\n  };\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  };\r\n\r\n  return transformedComments;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__IlcUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__19UiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__DkJzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3qv8g\"};","import {Link} from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const sortQuotesHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortQuotesHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to='/new-quote' className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\n\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n    useEffect(() => {\r\n        sendRequest();\r\n    },\r\n        [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return <div className='centered'>\r\n            <LoadingSpinner />\r\n        </div>;\r\n    };\r\n\r\n    if (status === 'error') {\r\n        return <p className='centered focused'>{error}</p>;\r\n    };\r\n\r\n    if (status === 'completed' && !loadedQuotes || loadedQuotes.length === 0) {\r\n        return <NoQuotesFound />;\r\n    };\r\n\r\n    return <QuoteList quotes={loadedQuotes} />\r\n};\r\n\r\nexport default AllQuotes;","import { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Best Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li><NavLink to='/quotes' activeClassName={classes.active} >All Quotes</NavLink> </li>\r\n                    <li><NavLink to='/new-quote' activeClassName={classes.active} >Add a Quote</NavLink> </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default MainNavigation;","import { Fragment } from 'react';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation />\r\n            <main className={classes.main} >{props.children}</main>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React, { Suspense } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport AllQuotes from './pages/AllQuotes';\r\n// import QuoteDetail from './pages/QuoteDetail';\r\n// import NewQuote from './pages/NewQuote';\r\n// import NotFound from './pages/NotFound';\r\nimport Layout from './components/layout/Layout';\r\nimport LoadingSpinner from './components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = React.lazy(() => import('./pages/QuoteDetail'));\r\nconst NewQuote = React.lazy(() => import('./pages/NewQuote'));\r\nconst NotFound = React.lazy(() => import('./pages/NotFound'));\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      <Suspense fallback={\r\n        <div className='centered'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      }>\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <Redirect to='/quotes' />\r\n          </Route>\r\n          <Route path='/quotes' exact>\r\n            <AllQuotes />\r\n          </Route>\r\n          <Route path='/quotes/:quoteId'>\r\n            <QuoteDetail />\r\n          </Route>\r\n          <Route path='/new-quote'>\r\n            <NewQuote />\r\n          </Route>\r\n          <Route path='*'>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </Suspense>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport {  HashRouter as BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nrequire('dotenv').config();\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n"],"sourceRoot":""}